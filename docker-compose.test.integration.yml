services: 
  test_runner:
    container_name: test_runner_integration
    build:
      context: ./tests/integration
      dockerfile: Dockerfile
    depends_on:
      backend:
        condition: service_healthy
    command: ["poetry", "run", "pytest", "-v"]
  
  backend:
    container_name: backend_integration_test
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=mongodb://mongodb_test:27017
      - STT_URL=http://mock_stt:9000
      - TRANSLATION_URL=http://mock_translation:9001
      - SUMMARIZATION_URL=http://summarization:9002
      - JWT_SECRET=integration_test_jwt_secret_key_12345
      - GOOGLE_CLIENT_ID=test_google_client_id
      - GOOGLE_CLIENT_SECRET=test_google_client_secret
      - GOOGLE_REDIRECT_URI=http://localhost:8000/auth/google/callback
    depends_on:
      - mongodb_test
      - mock_stt
      - mock_translation
    # This tells Docker how to determine if the backend is ready.
    healthcheck:
      # The command runs INSIDE the container. 'curl -f' fails with a non-zero
      # exit code if the HTTP status is an error (like 4xx or 5xx).
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 5s       # Check every 5 seconds
      timeout: 10s       # Wait up to 10 seconds for a response
      retries: 5         # Try up to 5 times before marking as unhealthy
      start_period: 20s  # Grace period for startup to avoid premature failures

  mongodb_test:
    container_name: mongodb_integration_test
    image: mongo:latest
    command: mongod --quiet --logpath /dev/null
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 20s

  mock_stt:
    container_name: mock_stt_integration
    build:
      context: ./tests/integration
      dockerfile: Dockerfile
    command: ["poetry","run","uvicorn","mock_stt:app","--host","0.0.0.0","--port","9000"]

  mock_translation:
    container_name: mock_translation_integration
    build:
      context: ./tests/integration
      dockerfile: Dockerfile
    command: ["poetry","run","uvicorn","mock_translation:app","--host","0.0.0.0","--port","9001"]
